__kernel void alfavit(__global int* picture, int start_pos,
					int back_color, int front_color, int w_x,
					int w_x2, int w_x3, int w_x4, int w_x5,
					int w_x6, int w_x7, int w_x8, int w_x9,
					int w_x10, int w_x11)
{
	picture[start_pos + w_x + 1] = back_color;
	picture[start_pos + w_x + 2] = back_color;
	picture[start_pos + w_x + 3] = front_color;
	picture[start_pos + w_x + 4] = front_color;
	picture[start_pos + w_x + 5] = back_color;
	picture[start_pos + w_x + 6] = back_color;
	picture[start_pos + w_x + 7] = back_color;
	picture[start_pos + w_x2 + 1] = back_color;
	picture[start_pos + w_x2 + 2] = front_color;
	picture[start_pos + w_x2 + 3] = front_color;
	picture[start_pos + w_x2 + 4] = front_color;
	picture[start_pos + w_x2 + 5] = front_color;
	picture[start_pos + w_x2 + 6] = back_color;
	picture[start_pos + w_x2 + 7] = back_color;
	picture[start_pos + w_x3 + 1] = front_color;
	picture[start_pos + w_x3 + 2] = front_color;
	picture[start_pos + w_x3 + 3] = back_color;
	picture[start_pos + w_x3 + 4] = back_color;
	picture[start_pos + w_x3 + 5] = front_color;
	picture[start_pos + w_x3 + 6] = front_color;
	picture[start_pos + w_x3 + 7] = back_color;
	picture[start_pos + w_x4 + 1] = front_color;
	picture[start_pos + w_x4 + 2] = front_color;
	picture[start_pos + w_x4 + 3] = back_color;
	picture[start_pos + w_x4 + 4] = back_color;
	picture[start_pos + w_x4 + 5] = front_color;
	picture[start_pos + w_x4 + 6] = front_color;
	picture[start_pos + w_x4 + 7] = back_color;
	picture[start_pos + w_x5 + 1] = front_color;
	picture[start_pos + w_x5 + 2] = front_color;
	picture[start_pos + w_x5 + 3] = back_color;
	picture[start_pos + w_x5 + 4] = back_color;
	picture[start_pos + w_x5 + 5] = front_color;
	picture[start_pos + w_x5 + 6] = front_color;
	picture[start_pos + w_x5 + 7] = back_color;
	picture[start_pos + w_x6 + 1] = front_color;
	picture[start_pos + w_x6 + 2] = front_color;
	picture[start_pos + w_x6 + 3] = back_color;
	picture[start_pos + w_x6 + 4] = back_color;
	picture[start_pos + w_x6 + 5] = front_color;
	picture[start_pos + w_x6 + 6] = front_color;
	picture[start_pos + w_x6 + 7] = back_color;
	picture[start_pos + w_x7 + 1] = front_color;
	picture[start_pos + w_x7 + 2] = front_color;
	picture[start_pos + w_x7 + 3] = back_color;
	picture[start_pos + w_x7 + 4] = back_color;
	picture[start_pos + w_x7 + 5] = front_color;
	picture[start_pos + w_x7 + 6] = front_color;
	picture[start_pos + w_x7 + 7] = back_color;
	picture[start_pos + w_x8 + 1] = front_color;
	picture[start_pos + w_x8 + 2] = front_color;
	picture[start_pos + w_x8 + 3] = back_color;
	picture[start_pos + w_x8 + 4] = back_color;
	picture[start_pos + w_x8 + 5] = front_color;
	picture[start_pos + w_x8 + 6] = front_color;
	picture[start_pos + w_x8 + 7] = back_color;
	picture[start_pos + w_x9 + 1] = front_color;
	picture[start_pos + w_x9 + 2] = front_color;
	picture[start_pos + w_x9 + 3] = back_color;
	picture[start_pos + w_x9 + 4] = back_color;
	picture[start_pos + w_x9 + 5] = front_color;
	picture[start_pos + w_x9 + 6] = front_color;
	picture[start_pos + w_x9 + 7] = back_color;
	picture[start_pos + w_x10 + 1] = back_color;
	picture[start_pos + w_x10 + 2] = front_color;
	picture[start_pos + w_x10 + 3] = front_color;
	picture[start_pos + w_x10 + 4] = front_color;
	picture[start_pos + w_x10 + 5] = front_color;
	picture[start_pos + w_x10 + 6] = back_color;
	picture[start_pos + w_x10 + 7] = back_color;
	picture[start_pos + w_x11 + 1] = back_color;
	picture[start_pos + w_x11 + 2] = back_color;
	picture[start_pos + w_x11 + 3] = front_color;
	picture[start_pos + w_x11 + 4] = front_color;
	picture[start_pos + w_x11 + 5] = back_color;
	picture[start_pos + w_x11 + 6] = back_color;
	picture[start_pos + w_x11 + 7] = back_color;
}

__kernel void kercorewar(__global int* picture, __global uchar* field,
						__global int* changes, __global bool* cursor,
						__global int* live,
						const int w_x, const int w_y,
						const int flows, const int total_cycle)
{
	int gid = get_global_id(0);

	int	back_color = 0x000000;
	int	front_color = 0x888888;
	int half_gid = gid / 2;
	int change = changes[half_gid];
	int tithe_change = change / 10;
	if (change > 0)
	{
		switch (change % 10)
		{
			case 0:
				front_color = 0x990000;
				if ((tithe_change + 50 >= total_cycle) && (tithe_change > 1))
					front_color = 0xFF0000;
				break;
			case 1:
				front_color = 0x9900;
				if ((tithe_change + 50 >= total_cycle) && (tithe_change > 1))
					front_color = 0xFF00;
				break;
			case 2:
				front_color = 0x9999;
				if ((tithe_change + 50 >= total_cycle) && (tithe_change > 1))
					front_color = 0xFFFF;
				break;
			case 3:
				front_color = 0x990099;
				if ((tithe_change + 50 >= total_cycle) && (tithe_change > 1))
					front_color = 0xFF00FF;
				break;
		}
	}

	if (cursor[half_gid] == true)
	{
		back_color = front_color;
		front_color = 0x000000;
	}


	if (live[half_gid] > 0)
	{
		tithe_change = live[half_gid] / 10;
		if (tithe_change + 50 >= total_cycle)
		{
			front_color = 0xFFFFFF;
			switch (live[half_gid] % 10)
			{
				case 0:
					back_color = 0xCC0000;
					break;
				case 1:
					back_color = 0xCC00;
					break;
				case 2:
					back_color = 0xCCCC;
					break;
				case 3:
					back_color = 0xCC00CC;
					break;
			}
		}
	}

	int value = field[half_gid];
	if (gid % 2 > 0)
		value = value % 16;
	else
		value = value / 16;
	int	num_x = gid % 128;
	int	num_y = gid / 128;
	int start_x = 30 + num_x * 9 + num_x / 2 * 3;
	int start_y = 30 + num_y * 15;
	int start_pos = start_y * w_x + start_x;
	int w_x2 = w_x * 2;
	int w_x3 = w_x * 3;
	int w_x4 = w_x * 4;
	int w_x5 = w_x * 5;
	int w_x6 = w_x * 6;
	int w_x7 = w_x * 7;
	int w_x8 = w_x * 8;
	int w_x9 = w_x * 9;
	int w_x10 = w_x * 10;
	int w_x11 = w_x * 11;
	int w_x12 = w_x * 12;
	switch (value)
	{
		case 0:
			alfavit(picture, start_pos,
					back_color, front_color, w_x,
					w_x2, w_x3, w_x4, w_x5,
					w_x6, w_x7, w_x8, w_x9,
					w_x10, w_x11);
			break;
		case 1:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = front_color;
			picture[start_pos + w_x3 + 5] = front_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = back_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = back_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x7 + 8] = back_color;
			picture[start_pos + w_x8] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x8 + 8] = back_color;
			picture[start_pos + w_x9] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x9 + 8] = back_color;
			picture[start_pos + w_x10] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = back_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x10 + 8] = back_color;
			picture[start_pos + w_x11] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			picture[start_pos + w_x11 + 8] = back_color;
			picture[start_pos + w_x12] = back_color;
			picture[start_pos + w_x12 + 1] = back_color;
			picture[start_pos + w_x12 + 2] = back_color;
			picture[start_pos + w_x12 + 3] = back_color;
			picture[start_pos + w_x12 + 4] = back_color;
			picture[start_pos + w_x12 + 5] = back_color;
			picture[start_pos + w_x12 + 6] = back_color;
			picture[start_pos + w_x12 + 7] = back_color;
			picture[start_pos + w_x12 + 8] = back_color;
			break;
		case 2:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = back_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = front_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = front_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 3:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = back_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 4:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = back_color;
			picture[start_pos + w_x10 + 4] = back_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = back_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = front_color;
			break;
		case 5:
			picture[start_pos + w_x + 1] = front_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = front_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 6:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 7:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = front_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = back_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 8:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 9:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = back_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = front_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 10:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = front_color;
			break;
		case 11:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = back_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 12:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 13:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = front_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 14:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 15:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = back_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = back_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = back_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
	}
	picture[start_pos] = back_color;
	picture[start_pos + 1] = back_color;
	picture[start_pos + 2] = back_color;
	picture[start_pos + 3] = back_color;
	picture[start_pos + 4] = back_color;
	picture[start_pos + 5] = back_color;
	picture[start_pos + 6] = back_color;
	picture[start_pos + 7] = back_color;
	picture[start_pos + 8] = back_color;
	picture[start_pos + w_x] = back_color;
	picture[start_pos + w_x + 8] = back_color;
	picture[start_pos + w_x2] = back_color;
	picture[start_pos + w_x2 + 8] = back_color;
	picture[start_pos + w_x3] = back_color;
	picture[start_pos + w_x3 + 8] = back_color;
	picture[start_pos + w_x4] = back_color;
	picture[start_pos + w_x4 + 8] = back_color;
	picture[start_pos + w_x5] = back_color;
	picture[start_pos + w_x5 + 8] = back_color;
	picture[start_pos + w_x6] = back_color;
	picture[start_pos + w_x6 + 8] = back_color;
	picture[start_pos + w_x7] = back_color;
	picture[start_pos + w_x7 + 8] = back_color;
	picture[start_pos + w_x8] = back_color;
	picture[start_pos + w_x8 + 8] = back_color;
	picture[start_pos + w_x9] = back_color;
	picture[start_pos + w_x9 + 8] = back_color;
	picture[start_pos + w_x10] = back_color;
	picture[start_pos + w_x10 + 8] = back_color;
	picture[start_pos + w_x11] = back_color;
	picture[start_pos + w_x11 + 8] = back_color;
	picture[start_pos + w_x12] = back_color;
	picture[start_pos + w_x12 + 1] = back_color;
	picture[start_pos + w_x12 + 2] = back_color;
	picture[start_pos + w_x12 + 3] = back_color;
	picture[start_pos + w_x12 + 4] = back_color;
	picture[start_pos + w_x12 + 5] = back_color;
	picture[start_pos + w_x12 + 6] = back_color;
	picture[start_pos + w_x12 + 7] = back_color;
	picture[start_pos + w_x12 + 8] = back_color;
}