	if (changes[gid] / 10 > 0) 
	{
		switch (changes[gid] % 10)
		{
			case 0:
				if (total_cycles > (changes[gid] / 10 + 50))
				{
					int	back_color = 0x000000;
					int	front_color = 0x880000;
				}
				else
				{
					int	back_color = 0x000000;
					int	front_color = 0xDD0000;
				}
				break;
			case 1:
				if (total_cycles > (changes[gid] / 10 + 50))
				{
					int	back_color = 0x000000;
					int	front_color = 0x008800;
				}
				else
				{
					int	back_color = 0x000000;
					int	front_color = 0x00DD00;
				}
				break;
			case 2:
				if (total_cycles > (changes[gid] / 10 + 50))
				{
					int	back_color = 0x000000;
					int	front_color = 0x000088;
				}
				else
				{
					int	back_color = 0x000000;
					int	front_color = 0x0000DD;
				}
				break;
			case 3:
				if (total_cycles > (changes[gid] / 10 + 50))
				{
					int	back_color = 0x000000;
					int	front_color = 0x880088;
				}
				else
				{
					int	back_color = 0x000000;
					int	front_color = 0xDD00DD;
				}
				break;
		}
	}
	else
	{
		int	back_color = 0x000000;
		int	front_color = 0x888888;
	}





switch (value)
	{
		case 0:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = front_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 1:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = front_color;
			picture[start_pos + w_x3 + 5] = front_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = back_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = back_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x7 + 8] = back_color;
			picture[start_pos + w_x8] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x8 + 8] = back_color;
			picture[start_pos + w_x9] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x9 + 8] = back_color;
			picture[start_pos + w_x10] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = back_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x10 + 8] = back_color;
			picture[start_pos + w_x11] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			picture[start_pos + w_x11 + 8] = back_color;
			picture[start_pos + w_x12] = back_color;
			picture[start_pos + w_x12 + 1] = back_color;
			picture[start_pos + w_x12 + 2] = back_color;
			picture[start_pos + w_x12 + 3] = back_color;
			picture[start_pos + w_x12 + 4] = back_color;
			picture[start_pos + w_x12 + 5] = back_color;
			picture[start_pos + w_x12 + 6] = back_color;
			picture[start_pos + w_x12 + 7] = back_color;
			picture[start_pos + w_x12 + 8] = back_color;
			break;
		case 2:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = back_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = front_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = front_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 3:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = back_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 4:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = back_color;
			picture[start_pos + w_x10 + 4] = back_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = back_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = front_color;
			break;
		case 5:
			picture[start_pos + w_x + 1] = front_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = front_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 6:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 7:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = front_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = back_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 8:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 9:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = front_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = front_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = front_color;
			picture[start_pos + w_x4 + 1] = front_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = back_color;
			picture[start_pos + w_x4 + 4] = back_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = front_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = back_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = front_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = front_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 10:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = front_color;
			picture[start_pos + w_x5 + 2] = back_color;
			picture[start_pos + w_x5 + 3] = back_color;
			picture[start_pos + w_x5 + 4] = back_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = front_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = front_color;
			break;
		case 11:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = front_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = front_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = front_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = front_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = front_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = front_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = front_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = back_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 12:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 13:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = front_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = front_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = front_color;
			picture[start_pos + w_x3 + 6] = front_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = front_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = front_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = back_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = front_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = front_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = back_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = front_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = front_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = back_color;
			picture[start_pos + w_x8 + 4] = back_color;
			picture[start_pos + w_x8 + 5] = front_color;
			picture[start_pos + w_x8 + 6] = front_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = front_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = back_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = front_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = back_color;
			picture[start_pos + w_x11 + 6] = front_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 14:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = back_color;
			picture[start_pos + w_x + 4] = back_color;
			picture[start_pos + w_x + 5] = back_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = back_color;
			picture[start_pos + w_x2 + 3] = back_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = back_color;
			picture[start_pos + w_x2 + 6] = back_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = back_color;
			picture[start_pos + w_x3 + 3] = back_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = front_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = front_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = front_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = back_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = front_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = front_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = back_color;
			picture[start_pos + w_x7 + 5] = front_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = front_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = front_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = back_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = front_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = front_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = front_color;
			picture[start_pos + w_x10 + 6] = front_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = back_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
		case 15:
			picture[start_pos + w_x + 1] = back_color;
			picture[start_pos + w_x + 2] = back_color;
			picture[start_pos + w_x + 3] = front_color;
			picture[start_pos + w_x + 4] = front_color;
			picture[start_pos + w_x + 5] = front_color;
			picture[start_pos + w_x + 6] = back_color;
			picture[start_pos + w_x + 7] = back_color;
			picture[start_pos + w_x2 + 1] = back_color;
			picture[start_pos + w_x2 + 2] = front_color;
			picture[start_pos + w_x2 + 3] = front_color;
			picture[start_pos + w_x2 + 4] = back_color;
			picture[start_pos + w_x2 + 5] = front_color;
			picture[start_pos + w_x2 + 6] = front_color;
			picture[start_pos + w_x2 + 7] = back_color;
			picture[start_pos + w_x3 + 1] = back_color;
			picture[start_pos + w_x3 + 2] = front_color;
			picture[start_pos + w_x3 + 3] = front_color;
			picture[start_pos + w_x3 + 4] = back_color;
			picture[start_pos + w_x3 + 5] = back_color;
			picture[start_pos + w_x3 + 6] = back_color;
			picture[start_pos + w_x3 + 7] = back_color;
			picture[start_pos + w_x4 + 1] = back_color;
			picture[start_pos + w_x4 + 2] = back_color;
			picture[start_pos + w_x4 + 3] = front_color;
			picture[start_pos + w_x4 + 4] = front_color;
			picture[start_pos + w_x4 + 5] = back_color;
			picture[start_pos + w_x4 + 6] = back_color;
			picture[start_pos + w_x4 + 7] = back_color;
			picture[start_pos + w_x5 + 1] = back_color;
			picture[start_pos + w_x5 + 2] = front_color;
			picture[start_pos + w_x5 + 3] = front_color;
			picture[start_pos + w_x5 + 4] = front_color;
			picture[start_pos + w_x5 + 5] = front_color;
			picture[start_pos + w_x5 + 6] = back_color;
			picture[start_pos + w_x5 + 7] = back_color;
			picture[start_pos + w_x6 + 1] = back_color;
			picture[start_pos + w_x6 + 2] = back_color;
			picture[start_pos + w_x6 + 3] = front_color;
			picture[start_pos + w_x6 + 4] = front_color;
			picture[start_pos + w_x6 + 5] = back_color;
			picture[start_pos + w_x6 + 6] = back_color;
			picture[start_pos + w_x6 + 7] = back_color;
			picture[start_pos + w_x7 + 1] = back_color;
			picture[start_pos + w_x7 + 2] = back_color;
			picture[start_pos + w_x7 + 3] = front_color;
			picture[start_pos + w_x7 + 4] = front_color;
			picture[start_pos + w_x7 + 5] = back_color;
			picture[start_pos + w_x7 + 6] = back_color;
			picture[start_pos + w_x7 + 7] = back_color;
			picture[start_pos + w_x8 + 1] = back_color;
			picture[start_pos + w_x8 + 2] = back_color;
			picture[start_pos + w_x8 + 3] = front_color;
			picture[start_pos + w_x8 + 4] = front_color;
			picture[start_pos + w_x8 + 5] = back_color;
			picture[start_pos + w_x8 + 6] = back_color;
			picture[start_pos + w_x8 + 7] = back_color;
			picture[start_pos + w_x9 + 1] = back_color;
			picture[start_pos + w_x9 + 2] = back_color;
			picture[start_pos + w_x9 + 3] = front_color;
			picture[start_pos + w_x9 + 4] = front_color;
			picture[start_pos + w_x9 + 5] = back_color;
			picture[start_pos + w_x9 + 6] = back_color;
			picture[start_pos + w_x9 + 7] = back_color;
			picture[start_pos + w_x10 + 1] = back_color;
			picture[start_pos + w_x10 + 2] = back_color;
			picture[start_pos + w_x10 + 3] = front_color;
			picture[start_pos + w_x10 + 4] = front_color;
			picture[start_pos + w_x10 + 5] = back_color;
			picture[start_pos + w_x10 + 6] = back_color;
			picture[start_pos + w_x10 + 7] = back_color;
			picture[start_pos + w_x11 + 1] = back_color;
			picture[start_pos + w_x11 + 2] = front_color;
			picture[start_pos + w_x11 + 3] = front_color;
			picture[start_pos + w_x11 + 4] = front_color;
			picture[start_pos + w_x11 + 5] = front_color;
			picture[start_pos + w_x11 + 6] = back_color;
			picture[start_pos + w_x11 + 7] = back_color;
			break;
	}
	picture[start_pos] = back_color;
	picture[start_pos + 1] = back_color;
	picture[start_pos + 2] = back_color;
	picture[start_pos + 3] = back_color;
	picture[start_pos + 4] = back_color;
	picture[start_pos + 5] = back_color;
	picture[start_pos + 6] = back_color;
	picture[start_pos + 7] = back_color;
	picture[start_pos + 8] = back_color;
	picture[start_pos + w_x] = back_color;
	picture[start_pos + w_x + 8] = back_color;
	picture[start_pos + w_x2] = back_color;
	picture[start_pos + w_x2 + 8] = back_color;
	picture[start_pos + w_x3] = back_color;
	picture[start_pos + w_x3 + 8] = back_color;
	picture[start_pos + w_x4] = back_color;
	picture[start_pos + w_x4 + 8] = back_color;
	picture[start_pos + w_x5] = back_color;
	picture[start_pos + w_x5 + 8] = back_color;
	picture[start_pos + w_x6] = back_color;
	picture[start_pos + w_x6 + 8] = back_color;
	picture[start_pos + w_x7] = back_color;
	picture[start_pos + w_x7 + 8] = back_color;
	picture[start_pos + w_x8] = back_color;
	picture[start_pos + w_x8 + 8] = back_color;
	picture[start_pos + w_x9] = back_color;
	picture[start_pos + w_x9 + 8] = back_color;
	picture[start_pos + w_x10] = back_color;
	picture[start_pos + w_x10 + 8] = back_color;
	picture[start_pos + w_x11] = back_color;
	picture[start_pos + w_x11 + 8] = back_color;
	picture[start_pos + w_x12] = back_color;
	picture[start_pos + w_x12 + 1] = back_color;
	picture[start_pos + w_x12 + 2] = back_color;
	picture[start_pos + w_x12 + 3] = back_color;
	picture[start_pos + w_x12 + 4] = back_color;
	picture[start_pos + w_x12 + 5] = back_color;
	picture[start_pos + w_x12 + 6] = back_color;
	picture[start_pos + w_x12 + 7] = back_color;
	picture[start_pos + w_x12 + 8] = back_color;


	int w_x2 = w_x * 2;
	int w_x3 = w_x * 3;
	int w_x4 = w_x * 4;
	int w_x5 = w_x * 5;
	int w_x6 = w_x * 6;
	int w_x7 = w_x * 7;
	int w_x8 = w_x * 8;
	int w_x9 = w_x * 9;
	int w_x10 = w_x * 10;
	int w_x11 = w_x * 11;
	int w_x12 = w_x * 12;

	